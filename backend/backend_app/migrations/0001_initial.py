# Generated by Django 4.2.7 on 2024-04-11 11:18

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import timescale.db.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('user_type', models.CharField(blank=True, choices=[('consumer', 'Consumer'), ('provider', 'Provider'), ('worker', 'Worker')], max_length=10, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Cluster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('cluster_type', models.CharField(choices=[('individual', 'Individual'), ('company', 'Company')], default='individual', max_length=10)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Consumer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('power_supply_number', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(code='invalid_power_supply_number', message='Power supply number must be 11 digits', regex='^\\d{11}$')])),
                ('contact_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('building_type', models.IntegerField(blank=True, choices=[(1, 'Apartment'), (2, 'Detached House')], null=True)),
                ('square_meters', models.IntegerField(blank=True, choices=[(1, '5-30'), (2, '31-65'), (3, '66-90'), (4, '91-120'), (5, '120+')], null=True)),
                ('floor', models.IntegerField(blank=True, choices=[(1, 'Ground Floor'), (2, '1st Floor (builing without pilotis)'), (3, '1st Floor (builing with pilotis)'), (4, 'On an indermediate floor'), (5, 'On the top floor')], null=True)),
                ('building_built', models.IntegerField(blank=True, choices=[(1, 'Before 1980'), (2, '1980-2000'), (3, '2001-2010'), (4, 'After 2010'), (5, 'Dont know')], null=True)),
                ('frames', models.IntegerField(blank=True, choices=[(1, 'Wooden or metal with single glazing'), (2, 'Aluminium or synthetic with double glazing'), (3, 'Aluminium or synthetic with thermal break and double glazing'), (4, 'Dont know')], null=True)),
                ('heating_type', models.IntegerField(blank=True, choices=[(1, 'Autonomous oil boiler'), (2, 'Central oil boiler'), (3, 'Independent natural gas boiler'), (4, 'Central gas boiler'), (5, 'Central heat pump'), (6, 'Autonomous heat pump'), (7, 'Boiler with pellets or other type of biomass'), (8, 'Thermal accumulators'), (9, 'Air conditioner'), (10, 'Stove'), (11, 'I dont use/dont know')], null=True)),
                ('have_solar_panels', models.IntegerField(blank=True, choices=[(1, 'Yes'), (2, 'No')], null=True)),
                ('hot_water', models.IntegerField(blank=True, choices=[(1, 'Electric water heater'), (2, 'Oil boiler'), (3, 'Gas boiler'), (4, 'Heat pump'), (5, 'Solar collector with electrical resistance'), (6, 'Solar collector with electrical resistance and heat pump'), (7, 'Solar collector with electric resistance and boiler'), (8, 'Electric resistance and boiler'), (9, 'I dont use/dont know')], null=True)),
                ('ev_car_charger', models.IntegerField(blank=True, choices=[(1, 'Yes'), (2, 'No')], null=True)),
                ('consumer_type', models.CharField(choices=[('individual', 'Individual'), ('company', 'Company')], max_length=10)),
                ('full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('number_of_occupants', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5+')], null=True)),
                ('type_of_occupants', models.IntegerField(blank=True, choices=[(1, 'One or more adults at least one child up to 17 years old'), (2, 'Adults aged 18 to 29 years old'), (3, 'Adults aged 30 to 54 years old'), (4, 'Adults aged 55 to 65 years old'), (5, 'Adults aged 65+ years old')], null=True)),
                ('age_electricity_manager', models.IntegerField(blank=True, choices=[(1, '18-24 years old'), (2, '25-34 years old'), (3, '35-44 years old'), (4, '45-54 years old'), (5, '55-64 years old'), (6, '65+ years old')], null=True)),
                ('company_name', models.CharField(blank=True, max_length=255, null=True)),
                ('tax_identification_number', models.CharField(blank=True, max_length=20, null=True)),
                ('number_of_employees', models.IntegerField(blank=True, choices=[(1, '1-10 (Very small business)'), (2, '11-50 (Small business)'), (3, '51-250 (Medium business)'), (4, '250+ (Large business)')], null=True)),
                ('cluster', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='consumers', to='backend_app.cluster')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='consumer_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ForecastingMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mape', models.DecimalField(decimal_places=3, max_digits=10)),
                ('rmse', models.DecimalField(decimal_places=3, max_digits=10)),
                ('mse', models.DecimalField(decimal_places=3, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='SecretProviderKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secret_provider_key', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='provider_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='KwhPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('month', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)])),
                ('year', models.IntegerField()),
            ],
            options={
                'unique_together': {('month', 'year')},
            },
        ),
        migrations.CreateModel(
            name='ForecastingConsumerConsumption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', timescale.db.models.fields.TimescaleDateTimeField(interval='1 hour')),
                ('forecasting_consumption_kwh', models.DecimalField(decimal_places=3, max_digits=10)),
                ('consumer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forecasting_consumptions', to='backend_app.consumer')),
            ],
            options={
                'unique_together': {('consumer', 'datetime')},
            },
        ),
        migrations.CreateModel(
            name='ConsumerMonthlyConsumptionAggregate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)])),
                ('consumption_kwh_sum', models.DecimalField(decimal_places=3, max_digits=10)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('consumer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_app.consumer')),
            ],
            options={
                'unique_together': {('consumer', 'month')},
            },
        ),
        migrations.CreateModel(
            name='ConsumerHourlyConsumptionAggregate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hour', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23)])),
                ('consumption_kwh_sum', models.DecimalField(decimal_places=3, max_digits=10)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('consumer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_app.consumer')),
            ],
            options={
                'unique_together': {('consumer', 'hour')},
            },
        ),
        migrations.CreateModel(
            name='ConsumerDailyConsumptionAggregate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)])),
                ('consumption_kwh_sum', models.DecimalField(decimal_places=3, max_digits=10)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('consumer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_app.consumer')),
            ],
            options={
                'unique_together': {('consumer', 'day')},
            },
        ),
        migrations.CreateModel(
            name='ConsumerConsumption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', timescale.db.models.fields.TimescaleDateTimeField(interval='1 hour')),
                ('consumption_kwh', models.DecimalField(decimal_places=3, max_digits=10)),
                ('consumer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consumptions', to='backend_app.consumer')),
            ],
            options={
                'unique_together': {('consumer', 'datetime')},
            },
        ),
        migrations.CreateModel(
            name='ClusterMonthlyConsumptionAggregate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)])),
                ('consumption_kwh_sum', models.DecimalField(decimal_places=3, max_digits=10)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_app.cluster')),
            ],
            options={
                'unique_together': {('cluster', 'month')},
            },
        ),
        migrations.CreateModel(
            name='ClusterHourlyConsumptionAggregate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hour', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23)])),
                ('consumption_kwh_sum', models.DecimalField(decimal_places=3, max_digits=10)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_app.cluster')),
            ],
            options={
                'unique_together': {('cluster', 'hour')},
            },
        ),
        migrations.CreateModel(
            name='ClusterDailyConsumptionAggregate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7)])),
                ('consumption_kwh_sum', models.DecimalField(decimal_places=3, max_digits=10)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend_app.cluster')),
            ],
            options={
                'unique_together': {('cluster', 'day')},
            },
        ),
        migrations.CreateModel(
            name='ClusterConsumption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', timescale.db.models.fields.TimescaleDateTimeField(interval='1 hour')),
                ('consumption_kwh', models.DecimalField(decimal_places=3, max_digits=10)),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cluster_consumptions', to='backend_app.cluster')),
            ],
            options={
                'unique_together': {('cluster', 'datetime')},
            },
        ),
    ]
